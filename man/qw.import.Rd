% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qw.import.R
\name{qw.import}
\alias{qw.import}
\title{qw.import}
\usage{
qw.import(var.qw, var.info, fn.qw, dir.data = getwd(), rounding.source = NA,
  rounding.data = c(2, 3))
}
\arguments{
\item{var.qw}{Censored data column names to be converted to QW.}

\item{var.info}{Data columns to be attached to the final data frame that are not QW fields, e.g., StationID.}

\item{fn.qw}{Vector of file names that match 1 for 1 with var.qw.}

\item{dir.data}{Data directory for files to import.  Default = getwd().}

\item{rounding.source}{Source of the rounding data (file or value).  Default is NA and uses c(2,3).}

\item{rounding.data}{Rounding information.}
}
\value{
Returns a QW enabled data frame.
}
\description{
Import the contents of tab delimited text files to a QW object.
}
\details{
This internal function will import data from tab delimited text files 
to create a data frame with columns of the qw class.  

Each slot name of the qw object (is required and) will be a column in the imported files 
(e.g., cond.remark.codes).  The qw slot value 'reporting' is handled by a file with just that information.

To get all qw slot names use the command slotNames("qw").  
The slot name ".Data" includes ".Data.values" and ".Data.value2".

Rounding is handled slightly differently and can be in a one column by two row file ("file")
or as a direct input ("value").

The function returns a data frame with QW enabled columns.  The user must save the file.  
Any modification of column classes needs to be handled by the user (e.g., character to date or POSIXct).
}
\examples{
# Show slot names for a qw object.
slotNames("qw")

# Export example data (dataCensored) to used for import
myDF <- dataCensored
dir.save <- getwd()
fn.prefix <- "dataCensored" 
qw.export(myDF, dir.save, fn.prefix)

# Reimport dataCensored as a new dataframe

var.qw <- c("secchi", "chla", "do", "tn", "tp", "po4f", "pp", "tdp"
              , "no23f", "nh4f", "tdn", "pn", "tss")
var.info <- c("station", "date", "layer")
fn.qw <- paste0("dataCensored.", var.qw, ".tsv")
rounding.source <- "file" # file or value or NA (default)
rounding.file <- paste0("dataCensored.", var.qw, ".rounding.tsv")
rounding.value <- c(3, 4) #default is c(2, 3)
rounding.data <- rounding.file

dataCensored.test<- qw.import(var.qw, var.info, fn.qw, dir.data=getwd()
                              , rounding.source=rounding.source
                              , rounding.data=rounding.value)
str(dataCensored.test)

# convert date field to POSIXct
dataCensored.test[,"date"] <- as.POSIXct(dataCensored.test[,"date"])
str(dataCensored.test)

# as.numeric() and as.integer() can be used to convert columns of those types.

save(dataCensored.test, file="dataCensored.test.rda")

}
\keyword{internal}
